@{
    ViewData["Title"] = "Bắt đầu in";
}
@{
    Layout = "_Layout";
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>File Upload with Drag & Drop</title>
    <style>
        #drop-area {
            width: 100%;
            height: 200px;
            border: 2px dashed #4CAF50;
            display: flex;
            justify-content: center;
            align-items: center;
            text-align: center;
            font-size: 16px;
            color: #555;
            margin-bottom: 20px;
        }

        #file-input {
            display: none;
        }

        #choose-file-btn {
            padding: 10px 20px;
            background-color: #4CAF50;
            color: white;
            border: none;
            cursor: pointer;
        }

        #choose-file-btn:hover {
            background-color: #45a049;
        }

        #file-name {
            margin-top: 10px;
        }
    </style>
</head>

<body>

    <h2>Drag and Drop or Choose a File</h2>

    <!-- Drag & Drop Area -->
    <div id="drop-area">
        <p>Drag & Drop file here or</p>
        <button id="choose-file-btn">Choose File</button>
        <input type="file" id="file-input" />
    </div>
    <button type="button" class="black-button mt-4 p-3 col-6" onclick="window.location.href='/Student/PageConfig';">Bắt đầu in</button>
    <p id="file-name"></p>

    <script>
        const dropArea = document.getElementById('drop-area');
        const fileInput = document.getElementById('file-input');
        const fileNameDisplay = document.getElementById('file-name');

        // Handle drag events
        dropArea.addEventListener('dragover', (e) => {
            e.preventDefault();
            dropArea.style.backgroundColor = '#f1f1f1';
        });

        dropArea.addEventListener('dragleave', () => {
            dropArea.style.backgroundColor = '#fff';
        });

        dropArea.addEventListener('drop', (e) => {
            e.preventDefault();
            dropArea.style.backgroundColor = '#fff';

            const files = e.dataTransfer.files;
            if (files.length > 0) {
                handleFile(files[0]);
            }
        });

        // Handle file input (when user clicks "Choose File")
        document.getElementById('choose-file-btn').addEventListener('click', () => {
            fileInput.click();
        });

        // File input change event (when user selects a file)
        fileInput.addEventListener('change', () => {
            const files = fileInput.files;
            if (files.length > 0) {
                handleFile(files[0]);
            }
        });

        // Handle file (show name and store in localStorage)
        function handleFile(file) {
            const fileName = file.name;
            fileNameDisplay.textContent = `Selected file: ${fileName}`;

            // Save file name and file content to localStorage
            const reader = new FileReader();
            reader.onloadend = function () {
                // Save both file name and base64 data to localStorage
                const fileData = {
                    name: fileName,
                    data: reader.result
                };
                localStorage.setItem('uploadedFile', JSON.stringify(fileData));
                console.log('File name and data saved to localStorage');
            };

            reader.readAsDataURL(file);  // This will encode the file to base64
        }
    </script>

</body>

</html>
